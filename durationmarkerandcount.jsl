Names Default To Here( 1 );Clear Symbols();New Window( "Select Data Table",	Outline Box( "Select Data Table",		Button Box( "Okay", 						dt = Current Data Table();				New Window( "Cutoff", <<Modal, Outline Box("Cutoff (s)", cutoff_box = Number Edit Box( 0.04 ), Button Box( "OK", cutoff = cutoff_box << get ),), );						dt << New Table Variable( "Duration Cutoff", cutoff );			dt << add rows( 1, 0 );			col = Column( dt, 1 );			r = dt << Get Rows Where( Col[Row() + 1, Empty()] != Col[Row(), Empty()] ); 			rr = Number( r );			For( j = 1, j <= rr, j++,				r[j] = r[j] + 2 * (j - 1)			);			For( i = 1, i <= rr, i++,				dt << Add Rows( 2, r[i] )			);			dt << New Column( "Duration Marker: Plotting",				numeric,				nominal,				formula(					If( Is Missing(:Name( "Dwell Duration (s)" )), empty(),						If( :Name( "Dwell Duration (s)" ) <= :Name( "Duration Cutoff" ), 						1,						2						)					)				)			);						dt << New Column( "Duration Marker",				numeric,				nominal,				formula(					If( Is Missing( :Cell ) & Is Missing( :Cell [Row() - 1, Empty()] ),						0,						If( :Name( "Dwell Duration (s)" ) <= :Name( "Duration Cutoff" ),							1,							2						)					)				)			);								dt << New Column( "Short Events Count",				numeric,				continuous,				formula(					If( :Duration Marker == 0,						0,						If( :Duration Marker == 1,							:Short Events Count[Row() - 1, Empty()] + :Duration Marker[Row(), Empty()],							If( :Duration Marker == 2,								:Short Events Count[Row() - 1, Empty()],								Empty()							)						)					)				)			);			dt << New Column( "Long Events Count",				numeric,				continuous,				formula(					If( :Duration Marker == 0,						0,						If( :Duration Marker == 2,							(:Long Events Count[Row() - 1, Empty()]) + (:Duration Marker[Row(), Empty()]) / 2,							If( :Duration Marker == 1,								:Long Events Count[Row() - 1, Empty()],								Empty()							)						)					)				)			);									Current Window() << close window;		), 	), );